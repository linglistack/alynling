# Taken from absolute_value.plot
# Takes a GeoLift object, returns:
# time + ATT estimate and confidence band for the treatment period
# Keep only needed columns from ATT summary
df <- GeoLift$summary$att[, c("Time", "Estimate", "lower_bound", "upper_bound")]
return(df)
}
library(GeoLift)
GeoLift_lift_injection <- function(x, market_ID){
# Taken from plot.GeoLiftPower
# Takes a GeoLiftMarketSelection object, and a market_ID, returns:
# 1. a GeoLift output object for market selection treatment vs. control
# 2. a data frame containing effect size, power, and Investment needed.
Market <- x$BestMarkets %>% dplyr::filter(ID == market_ID)
locs_aux <- unlist(strsplit(stringr::str_replace_all(Market$location, ", ", ","), split = ","))
max_time <- max(x$parameters$data$time)
data_lifted <- x$parameters$data
data_lifted$Y[data_lifted$location %in% locs_aux &
data_lifted$time >= max_time - Market$duration + 1] <-
data_lifted$Y[data_lifted$location %in% locs_aux &
data_lifted$time >= max_time - Market$duration + 1] * (1 + Market$EffectSize)
if (tolower(x$parameters$side_of_test) == "two_sided") {
stat_test <- "Total"
} else {
if (Market$EffectSize < 0) {
stat_test <- "Negative"
} else if (Market$EffectSize > 0) {
stat_test <- "Positive"
}
}
artificial_lift <- GeoLift(
Y_id = "Y",
time_id = "time",
location_id = "location",
data = data_lifted,
locations = locs_aux,
treatment_start_time = max_time - Market$duration + 1,
treatment_end_time = max_time,
model = x$parameters$model,
fixed_effects = x$parameters$fixed_effects,
stat_test = stat_test
)
treatment_periods <- unique(x$duration)
EffectSize <- unique(x$EffectSize)
PowerPlot_data <- as.data.frame(x$PowerCurves %>% dplyr::filter(
duration == Market$duration,
location == Market$location
))%>%
dplyr::group_by(EffectSize) %>%
dplyr::summarise(power = mean(power), investment = mean(Investment))
return(list("lifted" = artificial_lift, "power" = PowerPlot_data))
}
GeoLift_lift_data <- function(GeoLift) {
# Taken from Lift.plot
# Takes a GeoLift object, returns:
# treatment + observation + confidence band for treatment period
treatment_obs <- as.data.frame(
colMeans(
matrix(
GeoLift$y_obs,
nrow = nrow(GeoLift$test_id),
ncol = GeoLift$TreatmentEnd
)
)
) * nrow(GeoLift$test_id)
colnames(treatment_obs) <- c("t_obs")
q_treatment_locations <- length(GeoLift$test_id$name)
df <- data.frame(
t_obs = treatment_obs$t_obs,
c_obs = GeoLift$y_hat * q_treatment_locations,
c_obs_lower_bound = (GeoLift$y_hat - (GeoLift$summary$att$Estimate - GeoLift$summary$att$lower_bound)) * q_treatment_locations,
c_obs_upper_bound = (GeoLift$y_hat + (GeoLift$summary$att$upper_bound - GeoLift$summary$att$Estimate)) * q_treatment_locations,
Time = 1:length(treatment_obs$t_obs)
)
return(df)
}
GeoLift_att_data <- function(GeoLift) {
# Taken from absolute_value.plot
# Takes a GeoLift object, returns:
# time + ATT estimate and confidence band for the treatment period
# Keep only needed columns from ATT summary
df <- GeoLift$summary$att[, c("Time", "Estimate", "lower_bound", "upper_bound")]
return(df)
}
library(GeoLift)
GeoLift_lift_injection <- function(market_selection, market_ID){
# Taken from plot.GeoLiftPower
# Takes a GeoLiftMarketSelection object, and a market_ID, returns:
# 1. a GeoLift output object for market selection treatment vs. control
# 2. a data frame containing effect size, power, and Investment needed.
Market <- market_selection$BestMarkets %>% dplyr::filter(ID == market_ID)
locs_aux <- unlist(strsplit(stringr::str_replace_all(Market$location, ", ", ","), split = ","))
max_time <- max(market_selection$parameters$data$time)
data_lifted <- market_selection$parameters$data
data_lifted$Y[data_lifted$location %in% locs_aux &
data_lifted$time >= max_time - Market$duration + 1] <-
data_lifted$Y[data_lifted$location %in% locs_aux &
data_lifted$time >= max_time - Market$duration + 1] * (1 + Market$EffectSize)
if (tolower(market_selection$parameters$side_of_test) == "two_sided") {
stat_test <- "Total"
} else {
if (Market$EffectSize < 0) {
stat_test <- "Negative"
} else if (Market$EffectSize > 0) {
stat_test <- "Positive"
}
}
artificial_lift <- GeoLift(
Y_id = "Y",
time_id = "time",
location_id = "location",
data = data_lifted,
locations = locs_aux,
treatment_start_time = max_time - Market$duration + 1,
treatment_end_time = max_time,
model = market_selection$parameters$model,
fixed_effects = market_selection$parameters$fixed_effects,
stat_test = stat_test
)
treatment_periods <- unique(market_selection$duration)
EffectSize <- unique(market_selection$EffectSize)
PowerPlot_data <- as.data.frame(market_selection$PowerCurves %>% dplyr::filter(
duration == Market$duration,
location == Market$location
))%>%
dplyr::group_by(EffectSize) %>%
dplyr::summarise(power = mean(power), investment = mean(Investment))
return(list("lifted" = artificial_lift, "power" = PowerPlot_data))
}
GeoLift_lift_data <- function(GeoLift) {
# Taken from Lift.plot
# Takes a GeoLift object, returns:
# treatment + observation + confidence band for treatment period
treatment_obs <- as.data.frame(
colMeans(
matrix(
GeoLift$y_obs,
nrow = nrow(GeoLift$test_id),
ncol = GeoLift$TreatmentEnd
)
)
) * nrow(GeoLift$test_id)
colnames(treatment_obs) <- c("t_obs")
q_treatment_locations <- length(GeoLift$test_id$name)
df <- data.frame(
t_obs = treatment_obs$t_obs,
c_obs = GeoLift$y_hat * q_treatment_locations,
c_obs_lower_bound = (GeoLift$y_hat - (GeoLift$summary$att$Estimate - GeoLift$summary$att$lower_bound)) * q_treatment_locations,
c_obs_upper_bound = (GeoLift$y_hat + (GeoLift$summary$att$upper_bound - GeoLift$summary$att$Estimate)) * q_treatment_locations,
Time = 1:length(treatment_obs$t_obs)
)
return(df)
}
GeoLift_att_data <- function(GeoLift) {
# Taken from absolute_value.plot
# Takes a GeoLift object, returns:
# time + ATT estimate and confidence band for the treatment period
# Keep only needed columns from ATT summary
df <- GeoLift$summary$att[, c("Time", "Estimate", "lower_bound", "upper_bound")]
return(df)
}
library(GeoLift)
library(tidyverse)
# Plots for MarketSelections ----------------------------------------------
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
X = c(), #empty list as we have no covariates
format = "yyyy-mm-dd",
summary = TRUE)
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(10,15),
N = c(2,3,4,5),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.5, 0.05),
lookback_window = 1,
include_markets = c("chicago"),
exclude_markets = c("honolulu"),
holdout = c(0.5, 1),
cpic = 7.50,
budget = 100000,
alpha = 0.1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
ID = 3
artificial_lift <- GeoLift_lift_injection(MarketSelections, ID)
AL_lifted <- artificial_lift$lifted
AL_power <- artificial_lift$power
AL_power %>% ggplot() +
geom_line(aes(x = EffectSize, y = power))
plot(MarketSelections, ID)
AL_lifted %>% as_tibble()
AL_lifted
GeoLift_lift_data(AL_lifted)
GeoLift_att_data(AL_lifted)
data(GeoLift_Test)
library(GeoLift)
library(tidyverse)
data(GeoLift_PreTest)
data(GeoLift_Test)
GeoLift_PreTest
GeoLift_PreTest %>% as_tibble()
GeoLift_Test %>% as_tibble()
GP <- GeoLift_PreTest %>%
as_tibble() %>%
filter(location == "new york")
GP
GT <- GeoLift_Test %>%
as_tibble()%>%
filter(location == "new york")
GT
GP <- GeoLift_PreTest %>%
as_tibble() %>%
filter(location == "new york") %>%
pull("date")
GP <- GeoLift_PreTest %>%
as_tibble() %>%
filter(location == "new york") %>%
pull("date") %>%
max
GP
GT <- GeoLift_Test %>%
as_tibble()%>%
filter(location == "new york") %>%
ggplot(aes(x = time, y = Y))
GT <- GeoLift_Test %>%
as_tibble()%>%
filter(location == "new york") %>%
ggplot(aes(x = time, y = Y)) +
geom_line()
GeoLift_Test %>%
as_tibble()%>%
filter(location == "new york") %>%
ggplot(aes(x = time, y = Y)) +
geom_line()
GeoLift_Test %>%
as_tibble()%>%
filter(location == "new york") %>%
ggplot(aes(x = date, y = Y)) +
geom_line()
GeoLift_Test %>%
as_tibble()%>%
filter(location == "new york") %>%
ggplot(aes(x = date, y = "Y")) +
geom_line()
library(GeoLift)
library(tidyverse)
setwd("/home/shiwen/GitHub/alynling")
source(file.path("R/custom_geolift_functions/plot_helper.R"))
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
X = c(), #empty list as we have no covariates
format = "yyyy-mm-dd",
summary = TRUE)
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(10,15),
N = c(2,3,4,5),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.5, 0.05),
lookback_window = 1,
include_markets = c("chicago"),
exclude_markets = c("honolulu"),
holdout = c(0.5, 1),
cpic = 7.50,
budget = 100000,
alpha = 0.1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
MarketSelections$BestMarkets
MarketSelections$BestMarkets %>% as_tibble()
MarketSelections$PowerCurves %>% as_tibble()
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.3, 0.05),
lookback_window = 1,
include_markets = c("chicago"),
exclude_markets = c("honolulu"),
holdout = c(0.5, 1),
cpic = 7.50,
budget = 100000,
alpha = 0.1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.3, 0.05),
lookback_window = 1,
cpic = 1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
MarketSelections$PowerCurves %>% as_tibble()
MarketSelections$BestMarkets %>% as_tibble()
MarketSelections$BestMarkets %>%
as_tibble() %>%
ggplot(aes(x = Investment, y = Holdout, color = duration))
MarketSelections$BestMarkets %>%
as_tibble() %>%
ggplot(aes(x = Investment, y = Holdout, color = duration)) +
geom_point()
MarketSelections$BestMarkets %>%
as_tibble() %>%
ggplot(aes(x = Investment, y = Holdout, color = factor(duration))) +
geom_point()
MarketSelections$BestMarkets %>%
as_tibble() %>%
mutate(n_invest = Investment/EffectSize) %>%
ggplot(aes(x = n_invest, y = Holdout, color = factor(duration))) +
geom_point()
MarketSelections$BestMarkets %>%
as_tibble()
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(ID == 1)
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(ID == 1) %>%
pull(location)
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(location == "atlanta, austin, chicago, cleveland, columbus, dallas, denver, jacksonville, kansas city, las vegas, memphis, milwaukee, new york, orlando, saint paul, washington")
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(location == "atlanta, chicago")
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(location == "atlanta, dallas")
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(location == "atlanta, orlando")
MarketSelections$BestMarkets %>%
as_tibble() %>%
filter(location == "atlanta, washington")
MarketSelections$PowerCurves %>%
as_tibble()
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta")
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta") %>%
ggplot(aes(x = EffectSize, y = power, color = factor(duration))) +
geom_line()
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta") %>%
ggplot(aes(x = EffectSize, y = power, linetype = factor(duration))) +
geom_line()
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta, austin, chicago, cleveland, columbus, dallas, denver, jacksonville, kansas city, las vegas, memphis, milwaukee, new york, orlando, saint paul, washington") %>%
ggplot(aes(x = EffectSize, y = power, linetype = factor(duration))) +
geom_line()
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta, austin, chicago, cleveland, columbus, dallas, denver, jacksonville, kansas city, las vegas, memphis, milwaukee, new york, orlando, saint paul, washington") %>%
ggplot(aes(x = EffectSize, y = power, linetype = factor(duration))) +
geom_line()
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta, austin, chicago, cleveland, columbus, dallas, denver, jacksonville, kansas city, las vegas, memphis, milwaukee, new york, orlando, saint paul, washington") %>%
ggplot(aes(x = duration, y = power, linetype = factor(EffectSize))) +
geom_line()
ggplot(aes(x = duration, y = power)) +
geom_line()
MarketSelections$PowerCurves %>%
as_tibble() %>%
filter(location == "atlanta, austin, chicago, cleveland, columbus, dallas, denver, jacksonville, kansas city, las vegas, memphis, milwaukee, new york, orlando, saint paul, washington") %>%
filter(EffectSize == 0.1) %>%
ggplot(aes(x = duration, y = power)) +
geom_line()
MarketSelections$BestMarkets %>%
as_tibble()
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.3, 0.1),
lookback_window = 1,
cpic = 1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
MarketSelections$BestMarkets %>%
as_tibble() %>%
mutate(n_invest = Investment/EffectSize) %>%
ggplot(aes(x = n_invest, y = Holdout, color = factor(duration))) +
geom_point()
GeoTestData_PreTest
GeoTestData_PreTest$location %>% unique()
GeoTestData_PreTest$location %>% unique() %>% length()
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
N = c(1, integer(max_N/4), integer(max_N/2))
Y_id = "Y",
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
N = c(1, integer(max_N/4), integer(max_N/2)),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.3, 0.1),
lookback_window = 1,
cpic = 1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
max_N = GeoTestData_PreTest$location %>% unique() %>% length()
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
N = c(1, integer(max_N/4), integer(max_N/2)),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.3, 0.1),
lookback_window = 1,
cpic = 1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
integer(max_N/4)
max_N = GeoTestData_PreTest$location %>% unique() %>% length()
max_N
max_N/4
integer(max_N)
as.integer(max_N)
as.integer(0.1)
round(0.5)
round(0.51)
MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,
treatment_periods = c(7, 9, 11, 13, 15),
N = c(1, round(max_N/4), round(max_N/2)),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.3, 0.1),
lookback_window = 1,
cpic = 1,
Correlations = TRUE,
fixed_effects = TRUE,
side_of_test = "two_sided")
MarketSelections$BestMarkets %>%
as_tibble() %>%
mutate(n_invest = Investment/EffectSize) %>%
ggplot(aes(x = n_invest, y = Holdout, color = factor(duration))) +
geom_point()
investment_holdout_curve <- function(data, time_id="time", Y_id="Y",
tp, cpic, es, sign=c("positive","negative"),
lookback_window=1, step=0.01) {
sign <- match.arg(sign)
d <- data
names(d)[match(c(time_id, Y_id), names(d))] <- c("time","Y")
max_time <- max(d$time)
sims <- seq_len(lookback_window)
holdouts <- seq(0, 1, by=step)
res <- lapply(sims, function(sim){
t_start <- max_time - tp - sim + 2
t_end   <- t_start + tp - 1
Y_post_total <- sum(d$Y[d$time >= t_start & d$time <= t_end])
invest <- if (sign=="positive")
cpic * abs(es) * (1 - holdouts) * Y_post_total
else
cpic * abs(es) * holdouts * Y_post_total
data.frame(sim=sim, holdout=holdouts, investment=invest)
})
do.call(rbind, res)
}
GeoTestData_PreTest
investment_holdout_curve(GeoTestData_PreTest, tp = 9, cpic = 1, es = 0.2)
investment_per_es_curve <- function(data, time_id="time", Y_id="Y",
tp, cpic,
sign=c("positive","negative"),
lookback_window=1, step=0.01) {
sign <- match.arg(sign)
d <- data
names(d)[match(c(time_id, Y_id), names(d))] <- c("time","Y")
max_time <- max(d$time)
sims <- seq_len(lookback_window)
holdouts <- seq(0, 1, by=step)
res <- lapply(sims, function(sim){
t_start <- max_time - tp - sim + 2
t_end   <- t_start + tp - 1
Y_post_total <- sum(d$Y[d$time >= t_start & d$time <= t_end])
invest_per_es <- if (sign=="positive")
cpic * (1 - holdouts) * Y_post_total
else
cpic * holdouts * Y_post_total
data.frame(sim=sim, holdout=holdouts, invest_per_es=invest_per_es)
})
do.call(rbind, res)
}
investment_holdout_curve(GeoTestData_PreTest, tp = 9, cpic = 1)
investment_per_es_curve(GeoTestData_PreTest, tp = 9, cpic = 1)
